þtitle ISOFS V0.2.1 Read Me

þif text
þh= Table of Contents
þtoc
þendif


þh1 Introduction

  ISOFS is an installable file system for OS/2 to access ISO rawfiles
  suitable for burning on CD.  It allows transparent read only access to the
  contents of the raw file.  Currently only Joliet filenames are supported
  but this may change in the future.

  This file system is based on the sources of AEFS a cryptographic
  file system written by Eelco Dolstra.  See below for further information.

þh2 Requirements

  This software requires the EMX runtime fix 3.  It can be downloaded from:
  þtt{ftp://ftp.leo.org/pub/comp/os/os2/leo/gnu/emx+gcc/emxrt.zip}.


þh2 Installation

  Unzip the zip-file to any place on your hard disk. Run the install script
  þtt{install.cmd} which will add the following lines to your CONFIG.SYS:

þexample
  IFS=<install-path>\stubfsd.ifs ISOFS
  RUN=<install-path>\isofsdmn.exe
þendexample

  The old CONFIG.SYS will be saved as Config.ISO.

  A folder will be created on your desktop containing the documentation and
  objects to mount and unmount ISO files.
  
  The first line loads the FSD (file system driver), which is really a
  stub that passes requests to the daemon, which is started in the
  second line and does the real work. You may also want to add
  the bin-dir to the PATH environment variable, but that's merely
  a convenience.

þh2 Deinstallation

  Doubleclick the uninstall object to deinstall the filesystem. The script will
  remove the objects and the lines from the config.sys.

  The old CONFIG.SYS will be saved as Config.ISO.

þh2 Overview

  To access an ISO file as a volume, you must attach (`mount') it to a drive
  letter.  This can be done by typing

þexample
  mntisofs X: <drive>:\<path>\<filename>
þendexample

  The file 'filename' may be accessed now as drive X:. Copy, extract or view files
  contained in the image as if they were on your harddisk. 

  When you are done using the volume, you can type 

þexample
  umntiso X:
þendexample

  to detach it.


þh1 Command reference

  All programs use the GNU getopt syntax.  They all
  support the following options:

þdescription

þitem þsy{--help}

  Print help and exit.

þitem þsy{--version}
 
  Print version information and exit

þenddescription




þh2 isofsdmn

  The þtt{isofsdmn} program is the file system daemon.  The syntax is:

  þsy{isofsdmn <option>*}

  It is typically started in þtt{CONFIG.SYS} by a þtt{RUN} statement
  (þem{not} a þtt{CALL} statement) or from a script using the
  þtt{detach} command.

  The options are:

þdescription

þitem þsy{--logfile <filename>}

  Write log messages to the file specified by þsy{<filename>}.  By
  default, messages are written to standard error (which is the nul
  device if the daemon is started from þtt{CONFIG.SYS} or using
  þtt{detach}).

þitem þsy{--loglevel <n>}

  Set the severity threshold of log messages.  Only messages with a
  severity lower than or equal to the log level are actually written
  to the log file.  The levels are:

þdescription
þitem 1
  Fatal
þitem 2
  Evil (i.e. not fatal but worse than a `normal' error)
þitem 3
  Error
þitem 4
  Warning
þitem 9
  Debug
þenddescription

þenddescription


þh2 mntisofs

  The þtt{mntisofs} program attaches an ISO file to a drive
  letter.  The syntax is:

  þsy{mntisofs <option>* <drive-letter>: <path>}

  The options are:

þdescription

þitem þsy{--offset <nnnn>,  -o <nnnn>}

  Specify the offset of the session on the CD. This means the
  sector where the session starts on the CD. For the first session
  on a CD the offset is 0 and may be omitted. This option is experimental.

þitem þsy{--jcharset <codepage>}

  Translation codepage for the unicode names of Joliet CDs. If this
  switch is omitted the default system codepage is used.

þenddescription


  Examples:

þdescription

þitem Mount a file on drive X: using the codepage 850:

þexample
  mntisofs --jcharset cp850 X: c:\directory\isoimage.raw 
þendexample

þitem Mount another file on drive Y: using the default system codepage:

þexample
  mntisofs y: c:\directory\another_isoimage.raw 
þendexample

þitem Mount the same file on drive Z: using the codepage 850:

þexample
  mntisofs --jcharset cp850 z: c:\directory\another_isoimage.raw 
þendexample

þenddescription

  You may access all these mounted drives in parallel.

þh2 umntiso

  The þtt{umntaefs} program detaches an ISO file from a drive
  letter.  The syntax is:

  þsy{umntiso <option>* <drive-letter>:}

  The options are:

þdescription

þitem þsy{--force, -f}

  Detach the file system even if there are open files, active
  searches, or current directories for this drive.  This might not be
  entirely safe.

þenddescription





þh1 Known problems and limitations

  This release may still contain bugs.  Don't expect it
  to be rock solid. But in contrast to previous releases I didn't
  manage to crash my WPS anymore. So I consider it stable.

þitemize


þitem

  Only singlesession images are supported. This may change in the future.

þitem

  There is no caching or write ahead implemented so the file system isn't as fast
  as theoretical possible. But I think it's reasonable fast. 

þitem

 Only Joliet names are supported. This may change in the future.

þenditemize



þh1 Building ISOFS

  The makefiles require GNU make.

  To build the FSD (þtt{stubfsd.ifs}) you need Microsoft C 6.00.  This
  compiler can be downloaded from the IBM Developer Connection Device
  Driver Kit for OS/2 site at þtt{http://service.boulder.ibm.com/ddk}.
  You also need the FSD helper library and header file, which is
  included in the FSD toolkit:
  þtt{ftp://ftp.leo.org/pub/comp/os/os2/leo/devtools/doc/ifsinf.zip}.

  To build the daemon and the support programs you need gcc or pgcc,
  available from various locations.

  In general it isn't absolutely necessary to rebuild the FSD. In fact
  I took the precompiled FSD from the AEFS package and rewrote only
  the daemon.

þh1 License

  ISOFS is free software; you can redistribute it and/or modify it
  under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2, or (at your option)
  any later version.

  ISOFS is distributed in the hope that it will be useful, but WITHOUT
  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
  License for more details.

  You should have received a copy of the GNU General Public License
  along with ISOFS; see the file COPYING.  If not, write to the Free
  Software Foundation, 59 Temple Place - Suite 330, Boston, MA
  02111-1307, USA.


þh1 History

þdescription

þitem V0.1.1 20.08.2000

 First release

þitem V0.1.3 30.09.2000

 Fixed broken extended attribute handling which caused the WPS to crash. Added
 support for volume label.

þitem V0.1.5 03.10.2000

 Added missing filesystem driver to the archive.

þitem V0.2.0 25.08.2001

 Fixed mainly a memory leak and the still broken extended attribut handling. Some
 more bugs are fixed I forgot ;-). Added more descriptive error messages to þtt{mntisofs}
 so it's easier to find out what's going wrong.
 This seems to be the first really stable release.

þitem V0.2.1 02.10.2001

Added support for file and directory times which was still missing. Found the solution
for the missing notebook pages. You have to tell OS/2 that there's support for
EAs even if that's not true.

þenddescription

þh1 Author

  This software was written by Chris Wohlgemuth.  Send bug reports,
  patches, or other comments to þtt{<chris.wohlgemuth@cityweb.de>}.

  þtt{http://www.geocities.com/SiliconValley/Sector/5785/index.html}

þh1 Credits

  This file system is based on AEFS a cryptographic file system written
  by Eelco Dolstra þtt{<edolstra@students.cs.uu.nl>}. Without that work
  ISOFS wouldn't have been possible!  It only took me a few days to get
  the first version run. Thanks.

  The charset conversion was taken from the cdrecord package by
  J. Schilling.

  The routines for iso9660 access were originally written by Eric Youngdale (1993),
  Copyright 1993 Yggdrasil Computing, Incorporated.  


